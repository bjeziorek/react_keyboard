{"version":3,"sources":["App.tsx","index.tsx"],"names":["KeyListener","state","pressedKey","introText","handleKeyPress","event","setState","key","document","addEventListener","this","removeEventListener","React","Component","App","className","ReactDOM","render","getElementById"],"mappings":"oNAMMA,E,4MACJC,MAAQ,CACNC,WAAY,I,EAGdC,UAAY,4B,EAUZC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,O,uDATpC,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kB,kCAG1C,WACEI,SAASG,oBAAoB,QAASD,KAAKN,kB,oBAO7C,WACE,OACE,mCACGM,KAAKT,MAAMC,WAAX,mCAC+BQ,KAAKT,MAAMC,WAD1C,KAEG,gC,GAxBcU,IAAMC,WA8BnBC,EAAgB,kBAC3B,qBAAKC,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACE,cAAC,EAAD,S,MClCNC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.b872dafa.chunk.js","sourcesContent":["import React from 'react';\n\ninterface AppState {\n  pressedKey: string,\n}\n\nclass KeyListener extends React.Component<{}, AppState> {\n  state = {\n    pressedKey: '',\n  };\n\n  introText = 'The last pressed key is [';\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render(): React.ReactNode {\n    return (\n      <>\n        {this.state.pressedKey\n          ? `The last pressed key is [${this.state.pressedKey}]`\n          : 'Nothing was pressed yet'}\n      </>\n    );\n  }\n}\n\nexport const App: React.FC = () => (\n  <div className=\"App\">\n    <p className=\"App__message\">\n      <KeyListener />\n    </p>\n  </div>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}